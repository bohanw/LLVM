digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x1c5bbc0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  store i32 0, i32* %retval\l  store i32 0, i32* %a, align 4\l  store i32 0, i32* %b, align 4\l  %0 = load i32* %a, align 4\l  %1 = load i32* %b, align 4\l  %add = add nsw i32 %0, %1\l  store i32 %add, i32* %c, align 4\l  br label %while.cond\l}"];
	Node0x1c5bbc0 -> Node0x1c66c60;
	Node0x1c66c60 [shape=record,label="{while.cond:                                       \l  %2 = load i32* %b, align 4\l  %cmp = icmp slt i32 %2, 5\l  br i1 %cmp, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x1c66c60:s0 -> Node0x1c66cc0;
	Node0x1c66c60:s1 -> Node0x1c66e40;
	Node0x1c66cc0 [shape=record,label="{while.body:                                       \l  %3 = load i32* %c, align 4\l  %add1 = add nsw i32 %3, 1\l  store i32 %add1, i32* %c, align 4\l  %4 = load i32* %b, align 4\l  %inc = add nsw i32 %4, 1\l  store i32 %inc, i32* %b, align 4\l  %5 = load i32* %b, align 4\l  %cmp2 = icmp slt i32 %5, 2\l  br i1 %cmp2, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x1c66cc0:s0 -> Node0x1c66d20;
	Node0x1c66cc0:s1 -> Node0x1c66d80;
	Node0x1c66d20 [shape=record,label="{if.then:                                          \l  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str, i32 0, i32 0))\l  br label %if.end\l}"];
	Node0x1c66d20 -> Node0x1c66de0;
	Node0x1c66d80 [shape=record,label="{if.else:                                          \l  %call3 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([6 x i8]* @.str1, i32 0, i32 0))\l  br label %if.end\l}"];
	Node0x1c66d80 -> Node0x1c66de0;
	Node0x1c66de0 [shape=record,label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0x1c66de0 -> Node0x1c66c60;
	Node0x1c66e40 [shape=record,label="{while.end:                                        \l  %6 = load i32* %b, align 4\l  %call4 = call i32 @f1(i32 %6)\l  store i32 %call4, i32* %a, align 4\l  %7 = load i32* %c, align 4\l  %8 = load i32* %a, align 4\l  %call5 = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([8 x i8]* @.str2, i32 0, i32 0), i32 %7, i32 %8)\l  %9 = load i32* %c, align 4\l  ret i32 %9\l}"];
}
