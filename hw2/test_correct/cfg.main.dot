digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x24e0410 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %x = alloca i32, align 4\l  %i = alloca i32, align 4\l  %ptra = alloca i32*, align 8\l  store i32 0, i32* %retval\l  store i32 0, i32* %x, align 4\l  store i32* getelementptr inbounds ([100 x i32]* @a, i32 0, i32 0), i32** %ptra, align 8\l  store i32 0, i32* %i, align 4\l  %ld = alloca i32\l  %dependents = alloca i32\l  %dependents1 = alloca i32\l  br label %for.cond\l}"];
	Node0x24e0410 -> Node0x24e0470;
	Node0x24e0470 [shape=record,label="{for.cond:                                         \l  %0 = load i32* %i, align 4\l  %cmp = icmp slt i32 %0, 100\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x24e0470:s0 -> Node0x24d3550;
	Node0x24e0470:s1 -> Node0x24d3610;
	Node0x24d3550 [shape=record,label="{for.body:                                         \l  %1 = load i32* %i, align 4\l  %2 = load i32* %i, align 4\l  %idxprom = sext i32 %2 to i64\l  %arrayidx = getelementptr inbounds [100 x i32]* @a, i32 0, i64 %idxprom\l  store i32 %1, i32* %arrayidx, align 4\l  br label %for.inc\l}"];
	Node0x24d3550 -> Node0x24d35b0;
	Node0x24d35b0 [shape=record,label="{for.inc:                                          \l  %3 = load i32* %i, align 4\l  %inc = add nsw i32 %3, 1\l  store i32 %inc, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x24d35b0 -> Node0x24e0470;
	Node0x24d3610 [shape=record,label="{for.end:                                          \l  store i32 0, i32* %i, align 4\l  %4 = load i32* getelementptr inbounds ([100 x i32]* @a, i32 0, i64 97), align 4\l  %mul = mul nsw i32 %4, 3\l  %add7 = add nsw i32 %mul, 2\l  %flag = alloca i1\l  store i1 false, i1* %flag\l  br label %for.cond1\l}"];
	Node0x24d3610 -> Node0x24d3670;
	Node0x24d3670 [shape=record,label="{for.cond1:                                        \l  %5 = load i32* %i, align 4\l  %cmp2 = icmp slt i32 %5, 100\l  br i1 %cmp2, label %for.body3, label %for.end12\l|{<s0>T|<s1>F}}"];
	Node0x24d3670:s0 -> Node0x24d36d0;
	Node0x24d3670:s1 -> Node0x24d1490;
	Node0x24d36d0 [shape=record,label="{for.body3:                                        \l  %6 = load i32* %i, align 4\l  %cmp4 = icmp sgt i32 %6, 999\l  br i1 %cmp4, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x24d36d0:s0 -> Node0x24d12b0;
	Node0x24d36d0:s1 -> Node0x24d1310;
	Node0x24d12b0 [shape=record,label="{if.then:                                          \l  %7 = load i32* %i, align 4\l  %add = add nsw i32 %7, 1\l  %idxprom5 = sext i32 %add to i64\l  %arrayidx6 = getelementptr inbounds [100 x i32]* @a, i32 0, i64 %idxprom5\l  store i32 1, i32* %arrayidx6, align 4\l  %cmp3 = icmp eq i32 %4, 1\l  br label %if.end\l}"];
	Node0x24d12b0 -> Node0x24d1310;
	Node0x24d1310 [shape=record,label="{if.end:                                           \l  %loadflag = load i1* %flag\l  br i1 %loadflag, label %if.end.split, label %if.end.split.split\l|{<s0>T|<s1>F}}"];
	Node0x24d1310:s0 -> Node0x24d1370;
	Node0x24d1310:s1 -> Node0x24d13d0;
	Node0x24d1370 [shape=record,label="{if.end.split:                                     \l  %8 = load i32* getelementptr inbounds ([100 x i32]* @a, i32 0, i64 97), align 4\l  store i32 %8, i32* %ld\l  %9 = mul nsw i32 %4, 3\l  store i32 %9, i32* %dependents\l  %10 = add nsw i32 %mul, 2\l  store i32 %10, i32* %dependents1\l  store i1 false, i1* %flag\l  br label %if.end.split.split\l}"];
	Node0x24d1370 -> Node0x24d13d0;
	Node0x24d13d0 [shape=record,label="{if.end.split.split:                               \l  %dummy = add i32 0, 0\l  %11 = load i32* %i, align 4\l  %idxprom8 = sext i32 %11 to i64\l  %arrayidx9 = getelementptr inbounds [100 x i32]* @b, i32 0, i64 %idxprom8\l  store i32 %add7, i32* %arrayidx9, align 4\l  %cmp5 = icmp eq i32 %4, %add7\l  br label %for.inc10\l}"];
	Node0x24d13d0 -> Node0x24d1430;
	Node0x24d1430 [shape=record,label="{for.inc10:                                        \l  %12 = load i32* %i, align 4\l  %inc11 = add nsw i32 %12, 1\l  store i32 %inc11, i32* %i, align 4\l  %cmp6 = icmp eq i32 %4, %inc11\l  br label %for.cond1\l}"];
	Node0x24d1430 -> Node0x24d3670;
	Node0x24d1490 [shape=record,label="{for.end12:                                        \l  %13 = load i32* getelementptr inbounds ([100 x i32]* @b, i32 0, i64 97), align 4\l  %14 = load i32* getelementptr inbounds ([100 x i32]* @b, i32 0, i64 98), align 4\l  %15 = load i32* getelementptr inbounds ([100 x i32]* @b, i32 0, i64 99), align 4\l  %call = call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([12 x i8]* @.str, i32 0, i32 0), i32 %13, i32 %14, i32 %15)\l  ret i32 0\l}"];
}
